commit 962f40384e657f30051e62fc4e085c90cf7c2d05
Author: IgorKha <hahabahov@yandex.ru>
Date:   Tue Apr 11 17:58:28 2023 +0500

    reformat with mdlinter

diff --git a/readmeNapi.md b/readmeNapi.md
index a40974e..6c0d724 100644
--- a/readmeNapi.md
+++ b/readmeNapi.md
@@ -1,5 +1,4 @@
-NAPI руководство пользователя
-===========================================
+# NAPI руководство пользователя
 
  ![Napi front view](img/napi1-1.png)
 
@@ -17,7 +16,7 @@ NAPI руководство пользователя
   - [Инсталяция Linux в память NAND](#инсталяция-linux-в-память-nand)
   - [Быстрые ссылки](#быстрые-ссылки)
   - [Лицензии и права](#лицензии-и-права)
-  
+
 ## Основные характеристики
 
 - RK3308 processor (Cortex- A35 quard core)
@@ -28,10 +27,8 @@ NAPI руководство пользователя
 - 2xUSB 2.0
 - Питание +5В (через GPIO или USB Type-C)
 - POE Ready
-- 2.4мм GPIO 
+- 2.4мм GPIO
 - :point_up: Компактный размер: 43х43 мм
-  
-
 
 ## NAPI GPIO
 
@@ -41,24 +38,19 @@ NAPI руководство пользователя
 
  ![Napi front view](img/gpio-2-2.png)
 
-
-
 ## Инсталляция Linux на SD
 
 :warning: Подходит любая microSD карта от 8Gb
 
-<br>
-
  ![Napi front view](img/napi1.png)
 
-
 Записть прошивки на SD
 
-:point_up: Адрес прошивок: (https://packages.nnz-ipc.net/napi/)
+:point_up: Адрес прошивок: (<https://packages.nnz-ipc.net/napi/>)
 
-:point_up: Адрес программы Balena для записи SD: (https://balena-etcher.com)
+:point_up: Адрес программы Balena для записи SD: (<https://balena-etcher.com>)
 
-:point_up: Адреса других ОС с сайта RADXA: (https://wiki.radxa.com/RockpiS/downloads)
+:point_up: Адреса других ОС с сайта RADXA: (<https://wiki.radxa.com/RockpiS/downloads>)
 
 В программе Balena надо зашить на SD скачанный образ NAPI Linux
 
@@ -69,14 +61,13 @@ NAPI руководство пользователя
 
 :point_up: Вы можете работать с SD карты, без записи образа в NAND. При этом в "боевом" режиме рекомендуется работать с NAND
 
-## Работа c NAPI через TTL-USB консоль 
+## Работа c NAPI через TTL-USB консоль
 
 :point_up: Работает с любой прошивкой
 
  ![Napi front view](img/console-1.png)
 
- ``` 
-
+```text
 Параметры связи порта:
 
 baudrate: 1500000
@@ -84,84 +75,85 @@ data bit: 8
 stop bit: 1
 parity: none
 flow control: none
-
 ```
 
  ![Napi terminal view](img/console-3.png)
 
 ### Получение доступ к управлению NAPI c Linux-хоста
-<br>
 
 - Устанавливаем программу minicom:
-```
+
+```bash
 sudo apt-get update
 sudo apt-get install minicom
 ```
 
- - Определяем название USB-TTL в системе. Как правило, это будет устройство /dev/ttyUSB0(1) или /dev/ttyACM0(1). Чтобы точно узнать какое устройство, можно воспользоваться командой  
-  `dmesg | tail` 
+- Определяем название USB-TTL в системе. Как правило, это будет устройство /dev/ttyUSB0(1) или /dev/ttyACM0(1). Чтобы точно узнать какое устройство, можно воспользоваться командой `dmesg | tail`
 
  ![Napi terminal view](img/console-2.png)
 
-- Открываем консоль и получаем доступ к командной строке NAPI 
-
-  ``` sudo minicom -D /dev/ttyUSB0 -b 1500000 ```
+- Открываем консоль и получаем доступ к командной строке NAPI
 
-Вы должны увидеть лог загруки ядра и приглашение в ввести логин\пароль
+```bash
+sudo minicom -D /dev/ttyUSB0 -b 1500000
+```
 
-``` 
-login: root
-password: napilinux *)
+Вы должны увидеть лог загруки ядра и приглашение в ввести логин/пароль:
 
-*) зависит от дистрибутива 
-```
+> ***! INFO***
+>
+> **login:** `root`
+>
+> **password:** `napilinux` *)
+>
+>*) зависит от дистрибутива
 
 :boom: Необходимо сменить пароль командой ```passwd root```
 
  ![Napi terminal view](img/console-4.png)
 
 ### Получение доступ к управлению NAPI c Windows-хоста
-<br>
 
-- Скачиваем и устанавливаем программу Putty ( https://putty.org.ru )
+- Скачиваем и устанавливаем программу Putty ( <https://putty.org.ru> )
 - Подключаем преобразователь USB-TTL к ПК
 - В "Диспетчере устройств" определяем номер порта (USB Serial Port - COM3)
 - Проверяем параметры Putty
-```  
+
+```text
 Serial line — COM3;
 Speed — 1 500 000;
 Connection type — Serial;
 Saved Sessions — NA-PI
 ```
+
  ![Napi terminal view](img/console-5.png)
 
 ## Получение доступ к управлению NAPI по сети через SSH
 
 По умолчанию на устройстве настроено автополучние IP-адреса по
-DHCP. 
-
-:point_up: Для определения IP-адреса NAPI можно использовать программы сканирования сети (Linux — Angry IP Scanner (https://angryip.org)/ Windows — Advanced IP Scanner (https://advanced-ip-scanner.com)
+DHCP.
 
+:point_up: Для определения IP-адреса NAPI можно использовать программы сканирования сети (Linux — Angry IP Scanner (<https://angryip.org>)/ Windows — Advanced IP Scanner (<https://advanced-ip-scanner.com>)
 
 ```bash
 ssh root@<ip адрес NAPI>
 ```
 
 ## Инсталяция Linux в память NAND
-<br>
 
 :point_up: Рекомендуем именно этот режим в длительной работе !
 
-1.  Устанавливаем на Хост-ПК (Linux) утилиту rkdeveloptool.
+1.Устанавливаем на Хост-ПК (Linux) утилиту rkdeveloptool.
 В теримнале вводим команду для установки зависимостей сборки:
-```
+
+```bash
 sudo apt-get install libudev-dev libusb-1.0-0-dev
 dh-autoreconf
 ```
 
-2.  Копируем исходный код и собираем rkdeveloptool
+2.Копируем исходный код и собираем rkdeveloptool
 
-```  
+```bash
 git clone https://github.com/rockchip-linux/rkdeveloptool
 cd rkdeveloptool
 autoreconf -i
@@ -170,67 +162,67 @@ make
 ```
 
 :pick_ip: Если rkdeveloptool не компилируется необходимо применить патч:
-скачать (https://raw.githubusercontent.com/dmnovikov/napiguide/main/patches/main.patch)
+скачать (<https://raw.githubusercontent.com/dmnovikov/napiguide/main/patches/main.patch>)
 
-```
+```bash
 patch main.cpp -i main.patch
 ```
 
-и повторить команду ```make```
+и повторить команду `make`
 
-3. Копируем собранную программу в директорию с программами
-```
+3.Копируем собранную программу в директорию с программами
+
+```bash
 sudo cp rkdeveloptool /usr/local/bin/
 ```
 
 :warning: Перед записью образа во внутреннюю память, SD Card должна быть
 извлечена
 
-4. Загружаем плату в режиме Maskrom;
+4.Загружаем плату в режиме Maskrom;
 
-    - c помощью кабеля USB Type-C подключаем устройство к ПК в слот USB-A;
+- c помощью кабеля USB Type-C подключаем устройство к ПК в слот USB-A;
 
-    - нажимаем и удерживаем клавишу Maskrom, затем коротко нажимаем клавишу Reset не отпускаем Maskrom, через несколько секунд отпускаем Maskrom;
+- нажимаем и удерживаем клавишу Maskrom, затем коротко нажимаем клавишу Reset не отпускаем Maskrom, через несколько секунд отпускаем Maskrom;
 
 ![Napi terminal view](img/buttons.png)
 
-5.  Открываем терминал на Хост-ПК, вводим команду lsusb , если в списке USB-устройств появится `«ID 2207 : 330e»` -  означает, что устройство определилось в системе;
+5.Открываем терминал на Хост-ПК, вводим команду lsusb , если в списке USB-устройств появится `«ID 2207 : 330e»` -  означает, что устройство определилось в системе;
+
+6.В терминале вводим команду `rkdeveloptool ld` , если плата
+находится в режиме Maskкom, на экране появится сообщение
 
-6. В терминале вводим команду `rkdeveloptool ld` , если плата
-находится в режиме Maskкom, на экране появится сообщение 
 ```bash
 dmn@hp:~/rkdeveloptool$ ./rkdeveloptool ld
-DevNo=1	Vid=0x2207,Pid=0x330e,LocationID=101	Maskrom
+DevNo=1 Vid=0x2207,Pid=0x330e,LocationID=101 Maskrom
 dmn@hp:~/rkdeveloptool$
-
 ```
 
-7. Скачиваем bootloader (https://dl.radxa.com/rockpis/images/loader/)  файл `rk3308_loader_ddr589MHz_uart0_m0_v2.06.136sd.bin` и загружаем во внутреннюю память 
+7.Скачиваем bootloader (<https://dl.radxa.com/rockpis/images/loader/>)  файл `rk3308_loader_ddr589MHz_uart0_m0_v2.06.136sd.bin` и загружаем во внутреннюю память
   
 ```bash
 sudo rkdeveloptool db /path/to/rk3308_loader_ddr589MHz_uart0_m0_v2.06.136sd.bin
 
 ```
 
-8. скачиваем образ системы (https://packages.nnz-ipc.net/napi/) и загружаем во
+8.скачиваем образ системы (<https://packages.nnz-ipc.net/napi/>) и загружаем во
 внутреннюю память соответсвующий вашей конфигурации образ:
 
-```
+```bash
 sudo rkdeveloptool db rk3308_loader_ddr589MHz_uart0_m0_v2.06.136sd.bin
 ```
 
-:boom:При успешной загрузке прошивки через некоторое время замигает
+:boom: При успешной загрузке прошивки через некоторое время замигает
 красный индикатор.
 
-9. Если необходимо очистить внутреннюю память от загруженного
+9.Если необходимо очистить внутреннюю память от загруженного
 образа
 
-    - Создаем пустой образ, вводя команду: `dd if=/dev/zero of=./zero.img bs=4M count=10`
-    - Запускаем плату в режиме Maskrom
-    - Загружаем bootloader
-    - Загружаем полученный образ `rkdeveloptool wl 0 zero.img `
-    - Перезагружаем устройство
-
+- Создаем пустой образ, вводя команду: `dd if=/dev/zero of=./zero.img bs=4M count=10`
+- Запускаем плату в режиме Maskrom
+- Загружаем bootloader
+- Загружаем полученный образ `rkdeveloptool wl 0 zero.img`
+- Перезагружаем устройство
 
 ## Быстрые ссылки
 
@@ -238,7 +230,6 @@ sudo rkdeveloptool db rk3308_loader_ddr589MHz_uart0_m0_v2.06.136sd.bin
 
 - [Rockpi S images (совместимы с NAPI)](https://wiki.radxa.com/RockpiS/downloads)
 
+## Лицензии и права
 
-## Лицензии и права ###
-
-- NAPI и NAPI Linux разработка ООО "Коминтех" для ООО "Ниеншанц-Автоматика
\ No newline at end of file
+- NAPI и NAPI Linux разработка ООО "Коминтех" для ООО "Ниеншанц-Автоматика"
